"use strict";
/**
 * Copyright ou © ou Copr. Ministère de l'Europe et des Affaires étrangères (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * Ce logiciel est un programme informatique servant à faciliter la création
 * d'applications Web conformément aux référentiels généraux français : RGI, RGS et RGAA
 * <p/>
 * Ce logiciel est régi par la licence CeCILL soumise au droit français et
 * respectant les principes de diffusion des logiciels libres. Vous pouvez
 * utiliser, modifier et/ou redistribuer ce programme sous les conditions
 * de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA
 * sur le site "http://www.cecill.info".
 * <p/>
 * En contrepartie de l'accessibilité au code source et des droits de copie,
 * de modification et de redistribution accordés par cette licence, il n'est
 * offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
 * seule une responsabilité restreinte pèse sur l'auteur du programme,  le
 * titulaire des droits patrimoniaux et les concédants successifs.
 * <p/>
 * A cet égard  l'attention de l'utilisateur est attirée sur les risques
 * associés au chargement,  à l'utilisation,  à la modification et/ou au
 * développement et à la reproduction du logiciel par l'utilisateur étant
 * donné sa spécificité de logiciel libre, qui peut le rendre complexe à
 * manipuler et qui le réserve donc à des développeurs et des professionnels
 * avertis possédant  des  connaissances  informatiques approfondies.  Les
 * utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
 * logiciel à leurs besoins dans des conditions permettant d'assurer la
 * sécurité de leurs systèmes et ou de leurs données et, plus généralement,
 * à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.
 * <p/>
 * Le fait que vous puissiez accéder à cet en-tête signifie que vous avez
 * pris connaissance de la licence CeCILL, et que vous en avez accepté les
 * termes.
 * <p/>
 * <p/>
 * Copyright or © or Copr. Ministry for Europe and Foreign Affairs (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * This software is a computer program whose purpose is to facilitate creation of
 * web application in accordance with french general repositories : RGI, RGS and RGAA.
 * <p/>
 * This software is governed by the CeCILL license under French law and
 * abiding by the rules of distribution of free software.  You can  use,
 * modify and/ or redistribute the software under the terms of the CeCILL
 * license as circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 * <p/>
 * As a counterpart to the access to the source code and  rights to copy,
 * modify and redistribute granted by the license, users are provided only
 * with a limited warranty  and the software's author,  the holder of the
 * economic rights,  and the successive licensors  have only  limited
 * liability.
 * <p/>
 * In this respect, the user's attention is drawn to the risks associated
 * with loading,  using,  modifying and/or developing or reproducing the
 * software by the user in light of its specific status of free software,
 * that may mean  that it is complicated to manipulate,  and  that  also
 * therefore means  that it is reserved for developers  and  experienced
 * professionals having in-depth computer knowledge. Users are therefore
 * encouraged to load and test the software's suitability as regards their
 * requirements in conditions enabling the security of their systems and/or
 * data to be ensured and,  more generally, to use and operate it in the
 * same conditions as regards security.
 * <p/>
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL license and that you accept its terms.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * hornet-js-react-components - Ensemble des composants web React de base de hornet-js
 *
 * @author MEAE - Ministère de l'Europe et des Affaires étrangères
 * @version v5.1.1
 * @link git+https://github.com/diplomatiegouvfr/hornet-js.git
 * @license CECILL-2.1
 */
var hornet_js_utils_1 = require("hornet-js-utils");
var React = require("react");
var hornet_component_1 = require("hornet-js-react-components/src/widget/component/hornet-component");
var react_aria_modal_1 = require("hornet-js-react-components/src/widget/dialog/react-aria-modal");
var key_codes_1 = require("hornet-js-components/src/event/key-codes");
var classNames = require("classnames");
var Modal = /** @class */ (function (_super) {
    tslib_1.__extends(Modal, _super);
    function Modal(props, context) {
        return _super.call(this, props, context) || this;
    }
    Modal.prototype.setTitle = function (title, cb) {
        this.setState({ title: title }, cb);
        return this;
    };
    Modal.prototype.setCloseLabel = function (closeLabel, cb) {
        this.setState({ closeLabel: closeLabel }, cb);
        return this;
    };
    Modal.prototype.setCloseSymbole = function (closeSymbole, cb) {
        this.setState({ closeSymbole: closeSymbole }, cb);
        return this;
    };
    Modal.prototype.setChildren = function (children, cb) {
        this.setState({ children: children }, cb);
        return this;
    };
    Modal.prototype.open = function (cb) {
        this.setState({ isVisible: true }, cb);
        document.addEventListener("keydown", this.handleKeyDown, false);
        return this;
    };
    Modal.prototype.close = function (cb) {
        this.setState({ isVisible: false }, cb);
        document.removeEventListener("keydown", this.handleKeyDown, false);
        return this;
    };
    /**
     * Gestion par défaut du clic sur le bouton de fermeture
     * @param event
     */
    Modal.prototype.onClickClose = function (event) {
        this.close();
    };
    /**
     * Gestion par défaut du clic sur echap
     * @param event
     */
    Modal.prototype.handleKeyDown = function (event) {
        if (event.keyCode == key_codes_1.KeyCodes.ESCAPE) {
            if (this.state.onClickClose) {
                this.state.onClickClose(event);
            }
            else {
                this.close();
            }
        }
    };
    /**
     * @inheritDoc
     */
    Modal.prototype.componentDidMount = function () {
    };
    /**
     * @inheritDoc
     */
    Modal.prototype.componentWillUnmount = function () {
        document.removeEventListener("keydown", this.handleKeyDown, false);
    };
    /**
     * @inheritDoc
     */
    Modal.prototype.render = function () {
        if (hornet_js_utils_1.Utils.isServer) {
            return null;
        }
        var title = this.getTitle();
        var closeLabel = this.getCloseLabel();
        var closeSymbole = this.getCloseSymbole();
        var titleBarRender = null;
        var closeBarRender = null;
        var titleClasses = {};
        titleClasses["widget-dialogue-title"] = true;
        titleClasses["react-draggable-cursor"] = this.state.isDraggable;
        var titleClassName = classNames(titleClasses);
        if (!this.state.hideTitleBar) {
            titleBarRender = (React.createElement("div", { className: "widget-dialogue-header" },
                React.createElement("div", { className: titleClassName, id: "dialogue-title", "aria-describedby": "dialogue-body-content" }, title)));
        }
        if (!this.state.hideCloseBar) {
            closeBarRender = (React.createElement("div", { className: "widget-dialogue-close" },
                React.createElement("button", { type: "button", className: "hornet-button hornet-dialogue-croix", onClick: this.state.onClickClose || this.onClickClose, title: closeLabel, "aria-label": closeLabel }, closeSymbole)));
        }
        var bodyClasses = {
            "widget-dialogue-body": true,
            "modal-overflow-y": !this.state.withoutOverflow
        };
        return this.state.isVisible ?
            (React.createElement(react_aria_modal_1.ReactAriaModal, { titleText: title, onShow: this.state.onShow, onExit: this.state.onClickClose || this.onClickClose, dialogClass: this.state.className, verticallyCenter: this.state.verticallyCenter, escapeKeyExits: this.state.escapeKeyExits, underlayClickExits: this.state.underlayClickExits, alert: this.state.alert, underlayClass: this.state.underlayClass, initialFocus: this.state.initialFocus, focusDialog: this.state.focusDialog, manageFocus: this.state.manageFocus, isDraggable: this.state.isDraggable, id: this.state.dialogId },
                titleBarRender,
                React.createElement("div", { id: "dialogue-body-content", className: classNames(bodyClasses) }, this.state.children),
                closeBarRender)) : null;
    };
    /**
     * Extrait le titre passé dans les propriétés du composant ou indique un titre par défaut
     * @returns Titre
     * @protected
     */
    Modal.prototype.getTitle = function () {
        return this.state.title || this.i18n("dialog.title");
    };
    /**
     * Extrait le label de fermeture passé dans les propriétés du composant ou indique un label par défaut
     * @returns Titre
     * @protected
     */
    Modal.prototype.getCloseLabel = function () {
        return this.state.closeLabel || this.i18n("dialog.closeLabel");
    };
    /**
     * Extrait le symbole de fermeture dans les propriétés du composant ou indique un symbole par défaut
     * @returns Titre
     * @protected
     */
    Modal.prototype.getCloseSymbole = function () {
        return this.state.closeSymbole || this.i18n("dialog.closeSymbole");
    };
    Modal.defaultProps = {
        isVisible: false,
        hideTitleBar: false,
        hideCloseBar: false,
        alert: false,
        underlayClickExits: true,
        verticallyCenter: true,
        focusDialog: true,
        withoutOverflow: false
    };
    return Modal;
}(hornet_component_1.HornetComponent));
exports.Modal = Modal;

//# sourceMappingURL=modal.js.map
