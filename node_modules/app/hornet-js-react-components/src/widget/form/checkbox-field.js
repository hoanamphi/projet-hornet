"use strict";
/**
 * Copyright ou © ou Copr. Ministère de l'Europe et des Affaires étrangères (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * Ce logiciel est un programme informatique servant à faciliter la création
 * d'applications Web conformément aux référentiels généraux français : RGI, RGS et RGAA
 * <p/>
 * Ce logiciel est régi par la licence CeCILL soumise au droit français et
 * respectant les principes de diffusion des logiciels libres. Vous pouvez
 * utiliser, modifier et/ou redistribuer ce programme sous les conditions
 * de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA
 * sur le site "http://www.cecill.info".
 * <p/>
 * En contrepartie de l'accessibilité au code source et des droits de copie,
 * de modification et de redistribution accordés par cette licence, il n'est
 * offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
 * seule une responsabilité restreinte pèse sur l'auteur du programme,  le
 * titulaire des droits patrimoniaux et les concédants successifs.
 * <p/>
 * A cet égard  l'attention de l'utilisateur est attirée sur les risques
 * associés au chargement,  à l'utilisation,  à la modification et/ou au
 * développement et à la reproduction du logiciel par l'utilisateur étant
 * donné sa spécificité de logiciel libre, qui peut le rendre complexe à
 * manipuler et qui le réserve donc à des développeurs et des professionnels
 * avertis possédant  des  connaissances  informatiques approfondies.  Les
 * utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
 * logiciel à leurs besoins dans des conditions permettant d'assurer la
 * sécurité de leurs systèmes et ou de leurs données et, plus généralement,
 * à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.
 * <p/>
 * Le fait que vous puissiez accéder à cet en-tête signifie que vous avez
 * pris connaissance de la licence CeCILL, et que vous en avez accepté les
 * termes.
 * <p/>
 * <p/>
 * Copyright or © or Copr. Ministry for Europe and Foreign Affairs (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * This software is a computer program whose purpose is to facilitate creation of
 * web application in accordance with french general repositories : RGI, RGS and RGAA.
 * <p/>
 * This software is governed by the CeCILL license under French law and
 * abiding by the rules of distribution of free software.  You can  use,
 * modify and/ or redistribute the software under the terms of the CeCILL
 * license as circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 * <p/>
 * As a counterpart to the access to the source code and  rights to copy,
 * modify and redistribute granted by the license, users are provided only
 * with a limited warranty  and the software's author,  the holder of the
 * economic rights,  and the successive licensors  have only  limited
 * liability.
 * <p/>
 * In this respect, the user's attention is drawn to the risks associated
 * with loading,  using,  modifying and/or developing or reproducing the
 * software by the user in light of its specific status of free software,
 * that may mean  that it is complicated to manipulate,  and  that  also
 * therefore means  that it is reserved for developers  and  experienced
 * professionals having in-depth computer knowledge. Users are therefore
 * encouraged to load and test the software's suitability as regards their
 * requirements in conditions enabling the security of their systems and/or
 * data to be ensured and,  more generally, to use and operate it in the
 * same conditions as regards security.
 * <p/>
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL license and that you accept its terms.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * hornet-js-react-components - Ensemble des composants web React de base de hornet-js
 *
 * @author MEAE - Ministère de l'Europe et des Affaires étrangères
 * @version v5.1.1
 * @link git+https://github.com/diplomatiegouvfr/hornet-js.git
 * @license CECILL-2.1
 */
var React = require("react");
var abstract_field_1 = require("hornet-js-react-components/src/widget/form/abstract-field");
var _ = require("lodash");
var classNames = require("classnames");
var key_codes_1 = require("hornet-js-components/src/event/key-codes");
/**
 * Champ de formulaire Hornet de type Checkbox
 */
var CheckBoxField = /** @class */ (function (_super) {
    tslib_1.__extends(CheckBoxField, _super);
    function CheckBoxField(props, context) {
        var _this = _super.call(this, props, context) || this;
        if (props.readOnly) {
            // permet de désactiver le click lorsqu'uniquement readOnly par défaut
            _this.copyInitialPropsToState({ readOnly: true, disabled: true }, _this.state);
        }
        if (!_this.props.labelOnOff) {
            _this.state.labelOnOff = {
                "on": _this.i18n("form.checkbox.booleanOui"),
                "off": _this.i18n("form.checkbox.booleanNon")
            };
        }
        return _this;
    }
    /**
     * Génère le rendu spécifique du champ
     * @returns {any}
     * @override
     */
    CheckBoxField.prototype.renderWidget = function () {
        var cx = classNames(this.state.groupClass, "checkbox-container", {
            "inline": this.state.inline == abstract_field_1.InlineStyle.ALL || this.state.inline == abstract_field_1.InlineStyle.FIELD,
            "readonly": this.state.readOnly
        });
        var htmlProps = this.getHtmlProps();
        if (this.state.currentChecked != null) {
            _.assign(htmlProps, { "defaultChecked": this.state.currentChecked });
        }
        if (this.state.readOnly && !this.state.disabled) {
            htmlProps.disabled = true;
        }
        var element;
        if (this.state.readOnly) {
            delete htmlProps["onChange"];
        }
        if (this.state.switch) {
            element = this.renderSwitch(htmlProps);
        }
        else {
            element = this.renderCheckbox(htmlProps);
        }
        return (React.createElement("div", { className: cx }, element));
    };
    /**
     * Génère le rendu du champ en mode switch
     * @returns {any}
     */
    CheckBoxField.prototype.renderSwitch = function (htmlProps) {
        var _this = this;
        var labelOn = this.state.labelOnOff.on;
        var labelOff = this.state.labelOnOff.off;
        return (React.createElement("div", { className: "switch-content" },
            React.createElement("label", { className: "switch", onKeyDown: this.handleKeyDown },
                React.createElement("input", tslib_1.__assign({ ref: function (elt) { return _this.registerHtmlElement(elt); }, type: "checkbox", className: "switch-input" }, htmlProps, { value: "true" })),
                React.createElement("span", { "data-off": labelOff, "data-on": labelOn, className: "switch-label" }),
                React.createElement("span", { className: "switch-handle" }))));
    };
    /**
     * Génère le rendu du champ en mode checkbox
     * @returns {any}
     */
    CheckBoxField.prototype.renderCheckbox = function (htmlProps) {
        var _this = this;
        var classNamesSpan = {
            check: true,
            readonly: this.state.readOnly
        };
        return (React.createElement("div", { className: "checkbox-container" },
            React.createElement("label", { className: "checkbox-content", onKeyDown: this.handleKeyDown },
                React.createElement("input", tslib_1.__assign({ ref: function (elt) { return _this.registerHtmlElement(elt); }, type: "checkbox" }, htmlProps, { value: "true" })),
                React.createElement("span", { className: "checkbox-material" },
                    React.createElement("span", { className: classNames(classNamesSpan) })))));
    };
    /**
     * prise en compte de la navigation clavier pour les touches entrée et espace
     * @param e
     */
    CheckBoxField.prototype.handleKeyDown = function (e) {
        if (e.keyCode == key_codes_1.KeyCodes.ENTER) {
            this.setCurrentChecked(!this.getCurrentValue());
            e.preventDefault();
            e.stopPropagation();
        }
    };
    CheckBoxField.defaultProps = _.assign(abstract_field_1.AbstractField.defaultProps, {
        switch: false
    });
    return CheckBoxField;
}(abstract_field_1.AbstractField));
exports.CheckBoxField = CheckBoxField;

//# sourceMappingURL=checkbox-field.js.map
