"use strict";
/**
 * Copyright ou © ou Copr. Ministère de l'Europe et des Affaires étrangères (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * Ce logiciel est un programme informatique servant à faciliter la création
 * d'applications Web conformément aux référentiels généraux français : RGI, RGS et RGAA
 * <p/>
 * Ce logiciel est régi par la licence CeCILL soumise au droit français et
 * respectant les principes de diffusion des logiciels libres. Vous pouvez
 * utiliser, modifier et/ou redistribuer ce programme sous les conditions
 * de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA
 * sur le site "http://www.cecill.info".
 * <p/>
 * En contrepartie de l'accessibilité au code source et des droits de copie,
 * de modification et de redistribution accordés par cette licence, il n'est
 * offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
 * seule une responsabilité restreinte pèse sur l'auteur du programme,  le
 * titulaire des droits patrimoniaux et les concédants successifs.
 * <p/>
 * A cet égard  l'attention de l'utilisateur est attirée sur les risques
 * associés au chargement,  à l'utilisation,  à la modification et/ou au
 * développement et à la reproduction du logiciel par l'utilisateur étant
 * donné sa spécificité de logiciel libre, qui peut le rendre complexe à
 * manipuler et qui le réserve donc à des développeurs et des professionnels
 * avertis possédant  des  connaissances  informatiques approfondies.  Les
 * utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
 * logiciel à leurs besoins dans des conditions permettant d'assurer la
 * sécurité de leurs systèmes et ou de leurs données et, plus généralement,
 * à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.
 * <p/>
 * Le fait que vous puissiez accéder à cet en-tête signifie que vous avez
 * pris connaissance de la licence CeCILL, et que vous en avez accepté les
 * termes.
 * <p/>
 * <p/>
 * Copyright or © or Copr. Ministry for Europe and Foreign Affairs (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * This software is a computer program whose purpose is to facilitate creation of
 * web application in accordance with french general repositories : RGI, RGS and RGAA.
 * <p/>
 * This software is governed by the CeCILL license under French law and
 * abiding by the rules of distribution of free software.  You can  use,
 * modify and/ or redistribute the software under the terms of the CeCILL
 * license as circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 * <p/>
 * As a counterpart to the access to the source code and  rights to copy,
 * modify and redistribute granted by the license, users are provided only
 * with a limited warranty  and the software's author,  the holder of the
 * economic rights,  and the successive licensors  have only  limited
 * liability.
 * <p/>
 * In this respect, the user's attention is drawn to the risks associated
 * with loading,  using,  modifying and/or developing or reproducing the
 * software by the user in light of its specific status of free software,
 * that may mean  that it is complicated to manipulate,  and  that  also
 * therefore means  that it is reserved for developers  and  experienced
 * professionals having in-depth computer knowledge. Users are therefore
 * encouraged to load and test the software's suitability as regards their
 * requirements in conditions enabling the security of their systems and/or
 * data to be ensured and,  more generally, to use and operate it in the
 * same conditions as regards security.
 * <p/>
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL license and that you accept its terms.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * hornet-js-react-components - Ensemble des composants web React de base de hornet-js
 *
 * @author MEAE - Ministère de l'Europe et des Affaires étrangères
 * @version v5.1.1
 * @link git+https://github.com/diplomatiegouvfr/hornet-js.git
 * @license CECILL-2.1
 */
var hornet_js_utils_1 = require("hornet-js-utils");
var React = require("react");
var abstract_field_1 = require("hornet-js-react-components/src/widget/form/abstract-field");
var _ = require("lodash");
var classNames = require("classnames");
var abstract_field_datasource_1 = require("hornet-js-react-components/src/widget/form/abstract-field-datasource");
var logger = hornet_js_utils_1.Utils.getLogger("hornet-js-react-components.widget.form.radios-field");
/**
 * Composant groupe de boutons radio
 */
var RadiosField = /** @class */ (function (_super) {
    tslib_1.__extends(RadiosField, _super);
    function RadiosField(props, context) {
        var _this = _super.call(this, props, context) || this;
        if (_this.state.dataSource && _this.state.data) {
            throw new Error("Le RadiosField " + _this.state.name + " possède une props dataSource et une props data");
        }
        if (!_this.state.id) {
            _this.state.id = _this.state.name;
        }
        if (_this.state.dataSource && _this.state.dataSource.selected
            && ((_this.isDataSourceSelectedArray() && _this.state.dataSource.selected.length > 0) || !_this.isDataSourceSelectedArray())) {
            _this.state.selected = _this.state.dataSource.selected;
        }
        else {
            _this.state.selected = _this.props.defaultValue;
        }
        if (_this.state.dataSource) {
            _this.state.dataSource.on("select", function (selectedItems) {
                _this.setState({ selected: selectedItems });
            });
        }
        return _this;
    }
    RadiosField.prototype.setData = function (value) {
        /** liste des choix disponibles */
        this.setState({ data: value });
    };
    /**
     * enregistre la liste des choix possibles
     */
    RadiosField.prototype.setItem = function () {
        this.setState({ items: this.props.dataSource.results });
        /* permet de faire appel a la méthode setCurrentValue de dom-adapter pour cocher les valeurs*/
        this.setCurrentValue(this.state.currentValue);
    };
    RadiosField.prototype.handleClick = function (item) {
        if (this.props.dataSource) {
            this.props.dataSource.select(item);
        }
        else {
            this.setState({ selected: item });
        }
    };
    RadiosField.prototype.handleChange = function (event) {
        return true;
    };
    RadiosField.prototype.isDataSourceSelectedArray = function () {
        return Array.isArray(this.state.dataSource.selected);
    };
    /**
     * Génère le rendu des radio boutons à partir d'un dataSource
     * @returns {any}
     */
    RadiosField.prototype.renderRadioItemdataSource = function () {
        if (this.state.items && this.state.items.length > 0) {
            return this.state.items.map(this.renderRadioItem);
        }
    };
    /**
     * Génère le rendu d'un radio bouton et son libellé
     * @param choice choix sélectionnable
     * @param id number position in array
     * @returns {any}
     */
    RadiosField.prototype.renderRadioItem = function (choice, id) {
        var _this = this;
        /* On n'inclut pas les propriétés spécifiques ou celles dont on surcharge la valeur */
        var htmlProps = _.omit(this.getHtmlProps(), [
            "RadiosField, lié à une datasource (initialisée avec un array)dataSource",
            "type",
            "currentValue",
            "defaultChecked",
            "value",
            "id",
            "data"
        ]);
        if (this.state.readOnly && !this.state.disabled) {
            htmlProps.disabled = true;
        }
        var cx = classNames({
            "fl radio-inline": this.state.inline == abstract_field_1.InlineStyle.ALL || this.state.inline == abstract_field_1.InlineStyle.FIELD
        });
        var label = choice[this.state.labelKey] ?
            choice[this.state.labelKey] :
            choice[this.state.valueKey];
        var idInput = this.state.id + "-" + label;
        var key = idInput + "-" + choice.value;
        // positioning an input inside a label
        // see @link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label#Usage_notes
        return (React.createElement("li", { key: key, className: cx },
            React.createElement("label", { className: "radio-label", htmlFor: idInput },
                React.createElement("input", tslib_1.__assign({}, htmlProps, { ref: function (elt) { return _this.registerHtmlElement(elt); }, type: "radio", onClick: function () { return _this.handleClick(choice); }, value: choice[this.state.valueKey], id: idInput, checked: this.shouldRadioBeChecked(choice), onChange: this.handleChange })),
                React.createElement("span", { className: "outer" }),
                label)));
    };
    RadiosField.prototype.shouldRadioBeChecked = function (choice) {
        if (this.state.selected != undefined) {
            if (this.state.dataSource) {
                var mySelected = void 0;
                if (this.state.selected[this.props.valueKey] != undefined) {
                    mySelected = this.state.selected[this.props.valueKey];
                }
                else {
                    mySelected = this.state.selected[this.state.dataSource.keysMap[this.props.valueKey]];
                }
                return choice[this.state.valueKey] == mySelected;
            }
            else {
                return choice == this.state.selected;
            }
        }
        else {
            return false;
        }
    };
    /**
     * @override
     * Génère le rendu du libellé pour le champ
     * l'override permet de supprimer le for du label
     * @param fieldId identifiant du champ
     * @param fieldName nom du champ
     * @param label libellé à afficher
     * @param required indique si le champ est obligatoire
     * @returns {any}
     */
    RadiosField.prototype.renderLabel = function (fieldId, fieldName, label, required) {
        var hasData = this.state.data && this.state.data.length > 0;
        var hasDataSource = this.state.dataSource && this.state.dataSource.results && this.state.dataSource.results.length > 0;
        var id = "";
        if (hasData) {
            id = fieldId + "-" + this.state.data[0][this.state.labelKey];
        }
        if (hasDataSource) {
            id = fieldId + "-" + this.state.items[0][this.state.labelKey];
        }
        return _super.prototype.renderLabel.call(this, id, fieldName, label, required);
    };
    /**
     * Génère le rendu spécifique du champ : un groupe de boutons radio correspondant au tableau choices
     * @returns {any}
     */
    RadiosField.prototype.renderWidget = function () {
        var _this = this;
        var cx = classNames("radio", { "flex-container": this.state.inline }, { "inline": this.state.inline == RadiosField.Inline.ALL });
        var hasData = this.state.data && this.state.data.length > 0;
        var hasDataSource = this.state.dataSource && this.state.dataSource.results && this.state.dataSource.results.length > 0;
        return (React.createElement("ul", { className: cx },
            hasData ? this.state.data.map(this.renderRadioItem) : null,
            hasDataSource ? this.renderRadioItemdataSource() : null,
            !hasData && !hasDataSource ?
                React.createElement("input", { ref: function (elt) { return _this.registerHtmlElement(elt); }, type: "hidden", name: this.state.name, id: this.state.id }) : null));
    };
    RadiosField.defaultProps = _.assign(_.cloneDeep(abstract_field_1.AbstractField.defaultProps), {
        labelClass: "blocLabelUp",
        valueKey: "value",
        labelKey: "label",
        checkedKey: "defaultChecked",
        inline: abstract_field_1.InlineStyle.NONE
    });
    return RadiosField;
}(abstract_field_datasource_1.AbstractFieldDatasource));
exports.RadiosField = RadiosField;

//# sourceMappingURL=radios-field.js.map
