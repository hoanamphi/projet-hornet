"use strict";
/**
 * Copyright ou © ou Copr. Ministère de l'Europe et des Affaires étrangères (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * Ce logiciel est un programme informatique servant à faciliter la création
 * d'applications Web conformément aux référentiels généraux français : RGI, RGS et RGAA
 * <p/>
 * Ce logiciel est régi par la licence CeCILL soumise au droit français et
 * respectant les principes de diffusion des logiciels libres. Vous pouvez
 * utiliser, modifier et/ou redistribuer ce programme sous les conditions
 * de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA
 * sur le site "http://www.cecill.info".
 * <p/>
 * En contrepartie de l'accessibilité au code source et des droits de copie,
 * de modification et de redistribution accordés par cette licence, il n'est
 * offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
 * seule une responsabilité restreinte pèse sur l'auteur du programme,  le
 * titulaire des droits patrimoniaux et les concédants successifs.
 * <p/>
 * A cet égard  l'attention de l'utilisateur est attirée sur les risques
 * associés au chargement,  à l'utilisation,  à la modification et/ou au
 * développement et à la reproduction du logiciel par l'utilisateur étant
 * donné sa spécificité de logiciel libre, qui peut le rendre complexe à
 * manipuler et qui le réserve donc à des développeurs et des professionnels
 * avertis possédant  des  connaissances  informatiques approfondies.  Les
 * utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
 * logiciel à leurs besoins dans des conditions permettant d'assurer la
 * sécurité de leurs systèmes et ou de leurs données et, plus généralement,
 * à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.
 * <p/>
 * Le fait que vous puissiez accéder à cet en-tête signifie que vous avez
 * pris connaissance de la licence CeCILL, et que vous en avez accepté les
 * termes.
 * <p/>
 * <p/>
 * Copyright or © or Copr. Ministry for Europe and Foreign Affairs (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * This software is a computer program whose purpose is to facilitate creation of
 * web application in accordance with french general repositories : RGI, RGS and RGAA.
 * <p/>
 * This software is governed by the CeCILL license under French law and
 * abiding by the rules of distribution of free software.  You can  use,
 * modify and/ or redistribute the software under the terms of the CeCILL
 * license as circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 * <p/>
 * As a counterpart to the access to the source code and  rights to copy,
 * modify and redistribute granted by the license, users are provided only
 * with a limited warranty  and the software's author,  the holder of the
 * economic rights,  and the successive licensors  have only  limited
 * liability.
 * <p/>
 * In this respect, the user's attention is drawn to the risks associated
 * with loading,  using,  modifying and/or developing or reproducing the
 * software by the user in light of its specific status of free software,
 * that may mean  that it is complicated to manipulate,  and  that  also
 * therefore means  that it is reserved for developers  and  experienced
 * professionals having in-depth computer knowledge. Users are therefore
 * encouraged to load and test the software's suitability as regards their
 * requirements in conditions enabling the security of their systems and/or
 * data to be ensured and,  more generally, to use and operate it in the
 * same conditions as regards security.
 * <p/>
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL license and that you accept its terms.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * hornet-js-react-components - Ensemble des composants web React de base de hornet-js
 *
 * @author MEAE - Ministère de l'Europe et des Affaires étrangères
 * @version v5.1.1
 * @link git+https://github.com/diplomatiegouvfr/hornet-js.git
 * @license CECILL-2.1
 */
var hornet_js_utils_1 = require("hornet-js-utils");
var React = require("react");
var sort_data_1 = require("hornet-js-core/src/component/sort-data");
var abstract_cell_1 = require("hornet-js-react-components/src/widget/table/column/cell/abstract-cell");
var classNames = require("classnames");
var table_state_1 = require("hornet-js-react-components/src/widget/table/table-state");
var logger = hornet_js_utils_1.Utils.getLogger("hornet-js-react-components.widget.table.column.cell.abstract-header-cell");
/**
 * Classe permettant de générer le rendu html d'un cellule du header d'un tableau
 */
var AbstractHeaderCell = /** @class */ (function (_super) {
    tslib_1.__extends(AbstractHeaderCell, _super);
    function AbstractHeaderCell(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.props.contentState.on(table_state_1.ContentState.TOGGLE_COLUMNS_EVENT, _this.handleChangeHiddenColumns);
        _this.props.contentState.on(table_state_1.ContentState.EDITION_CLIC_EVENT, _this.handleEditionQuit);
        return _this;
    }
    /**
     * @inheritDoc
     */
    AbstractHeaderCell.prototype.shouldComponentUpdate = function (nextProps, nextState) {
        return true;
    };
    /**
     * @inheritDoc
     */
    AbstractHeaderCell.prototype.componentWillUnmount = function () {
        _super.prototype.componentWillUnmount.call(this);
        this.props.contentState.removeListener(table_state_1.ContentState.EDITION_CLIC_EVENT, this.handleEditionQuit);
    };
    /**
     * @inheritDoc
     */
    AbstractHeaderCell.prototype.render = function () {
        logger.trace("render AbstractHeaderCell -> column:", this.props.coordinates.column, " - line:", this.props.coordinates.row, "- isFocused:", this.state.isFocused, "- tabIndex:", this.state.tabIndex);
        return (React.createElement("th", tslib_1.__assign({}, this.getDefaultThProps(-1)), this.renderCell()));
    };
    AbstractHeaderCell.prototype.renderCell = function () {
        return (this.state.value);
    };
    /***
     * Retourne les propriétés par défaut d'un élément de type Td
     * @returns {{ref: ((instance:HTMLTableCellElement)=>undefined), className: string, onKeyDown: any, tabIndex: number, aria-selected: (((props:any)=>boolean)|any), onFocus: any, style: any}}
     */
    AbstractHeaderCell.prototype.getDefaultThProps = function (lineIndex) {
        var _this = this;
        logger.trace("Rendu Header column Tableau");
        var classes = { "datatable-header": true, "fixed": (this.props.headerFixed) };
        if (this.props.className) {
            classes[this.props.className] = true;
        }
        var ariasort = "none";
        var title;
        if (this.props.sortable && !this.props.contentState.itemInEdition) {
            var isTriActifSurColonne = this.isSortedColumn(this.props.sortData);
            // Gestion de la classe de l'entête th
            classes["datatable-header-sortable-column"] = true;
            if (isTriActifSurColonne) {
                classes["datatable-header-sorted"] = true;
                if (this.props.sortData.dir == sort_data_1.SortDirection.DESC) {
                    classes["datatable-header-sorted-desc"] = true;
                }
                else {
                    classes["datatable-header-sorted-asc"] = true;
                }
            }
            classes["datatable-cell-custom"] = true;
            classes["datatable-cell-custom-" + this.props.keyColumn] = true;
            var titleObject = this.handleSortTitle(isTriActifSurColonne, ariasort);
            ariasort = titleObject.ariasort;
            title = titleObject.title;
        }
        classes[this.props.id + "-" + this.props.keyColumn] = true;
        classes["is_disabled"] = this.props.contentState.itemInEdition !== undefined && this.props.contentState.itemInEdition !== null;
        var key = this.props.id + "-colHeader-0-" + this.props.coordinates.column;
        var tabIndex = this.getTabIndexFullKind();
        return ({
            ref: function (instance) {
                if (instance) {
                    _this.tableCellRef = instance;
                }
            },
            className: classNames(classes),
            onFocus: this.handleFocus.bind(this),
            onBlur: this.handleBlur.bind(this),
            onKeyDown: this.handleKeyDown.bind(this),
            style: this.props.style,
            key: key,
            title: title ? title : this.state.title,
            "aria-sort": ariasort,
            id: key,
            tabIndex: tabIndex
        });
    };
    AbstractHeaderCell.prototype.handleSortTitle = function (isTriActifSurColonne, ariasort) {
        // Gestion du title
        var sortDirection;
        if (isTriActifSurColonne) {
            /* Le tri est actif sur la colonne : on indique donc le sens de tri qui s'appliquera au prochain tri.
             * L'attribut aria-sort indique par contre le sens de tri courant (cf. https://www.w3.org/TR/wai-aria-1.1/#aria-sort) */
            if (this.props.sortData.dir == sort_data_1.SortDirection.DESC) {
                sortDirection = this.i18n("table.ascending");
                ariasort = "descending";
            }
            else {
                sortDirection = this.i18n("table.descending");
                ariasort = "ascending";
            }
        }
        else {
            sortDirection = this.i18n("table.ascending");
            /* Pas de tri actif : on ne doit pas valoriser l'attribut aria-sort */
        }
        var title = this.getSortByTitle(this.props.title, sortDirection);
        return { ariasort: ariasort, title: title };
    };
    /**
     * Génère le texte du bouton de tri par colonne
     * @param columnTitle titre de la colonne
     * @param sortDirection description de la direction du tri
     */
    AbstractHeaderCell.prototype.getSortByTitle = function (columnTitle, sortDirection) {
        return this.i18n((this.props.sortByTitle) || this.i18n("table.sortByTitle"), {
            "columnTitle": columnTitle.render ?
                columnTitle.render() : columnTitle,
            "sortTitle": sortDirection
        });
    };
    /**
     * Test si une column est trié
     * @param column colonne de tableau
     * @param sort données de tri courant du tableau
     * @return true lorsque le tri du tableau est actif sur la colonne indiquée
     */
    AbstractHeaderCell.prototype.isSortedColumn = function (sort) {
        var sorted = false;
        if (sort && sort.key) {
            if (this.props.keyColumn && sort.key === this.props.keyColumn) {
                // tri personnalisé sur la colonne : la clé de tri du tableau doit être égale à la clé de tri personnalisé/
                sorted = true;
            }
            else {
                // tri simple : la clé de tri du tableau doit être égale à la clé de la colonne
                sorted = false;
            }
        }
        return sorted;
    };
    /**
     * Retourne le tabIndex pour les éléments du tableau
     * Si la colonne est la première on autorise la tabulation
     * @returns valeur pour l'index de tabulation
     */
    AbstractHeaderCell.prototype.getTabIndexFullKind = function () {
        var firstVisibleCoord = this.props.contentState.firstVisibleColumnState.coordinates;
        return (this.props.coordinates.column == firstVisibleCoord) ? 0 : -1;
    };
    /**
     * Gestion des tabulations pour la première colonne visible
     */
    AbstractHeaderCell.prototype.handleChangeHiddenColumns = function (hiddenColumns, firstVisibleColumnState, oldFirstiVisibleColumnState) {
        if (firstVisibleColumnState.coordinates == this.props.coordinates.column) {
            this.tableCellRef.tabIndex = 0;
        }
        if (oldFirstiVisibleColumnState && oldFirstiVisibleColumnState.coordinates == this.props.coordinates.column) {
            this.tableCellRef.tabIndex = -1;
        }
    };
    /**
     * Prise en compte de la sortie du mode edition
     * @param lineIndex
     */
    AbstractHeaderCell.prototype.handleEditionQuit = function (lineIndex) {
        if (lineIndex) {
            this.setState({ edition: true });
        }
        else {
            this.setState({ edition: false });
        }
    };
    return AbstractHeaderCell;
}(abstract_cell_1.AbstractCell));
exports.AbstractHeaderCell = AbstractHeaderCell;

//# sourceMappingURL=abstract-header-cell.js.map
