"use strict";
/**
 * Copyright ou © ou Copr. Ministère de l'Europe et des Affaires étrangères (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * Ce logiciel est un programme informatique servant à faciliter la création
 * d'applications Web conformément aux référentiels généraux français : RGI, RGS et RGAA
 * <p/>
 * Ce logiciel est régi par la licence CeCILL soumise au droit français et
 * respectant les principes de diffusion des logiciels libres. Vous pouvez
 * utiliser, modifier et/ou redistribuer ce programme sous les conditions
 * de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA
 * sur le site "http://www.cecill.info".
 * <p/>
 * En contrepartie de l'accessibilité au code source et des droits de copie,
 * de modification et de redistribution accordés par cette licence, il n'est
 * offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
 * seule une responsabilité restreinte pèse sur l'auteur du programme,  le
 * titulaire des droits patrimoniaux et les concédants successifs.
 * <p/>
 * A cet égard  l'attention de l'utilisateur est attirée sur les risques
 * associés au chargement,  à l'utilisation,  à la modification et/ou au
 * développement et à la reproduction du logiciel par l'utilisateur étant
 * donné sa spécificité de logiciel libre, qui peut le rendre complexe à
 * manipuler et qui le réserve donc à des développeurs et des professionnels
 * avertis possédant  des  connaissances  informatiques approfondies.  Les
 * utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
 * logiciel à leurs besoins dans des conditions permettant d'assurer la
 * sécurité de leurs systèmes et ou de leurs données et, plus généralement,
 * à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.
 * <p/>
 * Le fait que vous puissiez accéder à cet en-tête signifie que vous avez
 * pris connaissance de la licence CeCILL, et que vous en avez accepté les
 * termes.
 * <p/>
 * <p/>
 * Copyright or © or Copr. Ministry for Europe and Foreign Affairs (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * This software is a computer program whose purpose is to facilitate creation of
 * web application in accordance with french general repositories : RGI, RGS and RGAA.
 * <p/>
 * This software is governed by the CeCILL license under French law and
 * abiding by the rules of distribution of free software.  You can  use,
 * modify and/ or redistribute the software under the terms of the CeCILL
 * license as circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 * <p/>
 * As a counterpart to the access to the source code and  rights to copy,
 * modify and redistribute granted by the license, users are provided only
 * with a limited warranty  and the software's author,  the holder of the
 * economic rights,  and the successive licensors  have only  limited
 * liability.
 * <p/>
 * In this respect, the user's attention is drawn to the risks associated
 * with loading,  using,  modifying and/or developing or reproducing the
 * software by the user in light of its specific status of free software,
 * that may mean  that it is complicated to manipulate,  and  that  also
 * therefore means  that it is reserved for developers  and  experienced
 * professionals having in-depth computer knowledge. Users are therefore
 * encouraged to load and test the software's suitability as regards their
 * requirements in conditions enabling the security of their systems and/or
 * data to be ensured and,  more generally, to use and operate it in the
 * same conditions as regards security.
 * <p/>
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL license and that you accept its terms.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * hornet-js-react-components - Ensemble des composants web React de base de hornet-js
 *
 * @author MEAE - Ministère de l'Europe et des Affaires étrangères
 * @version v5.1.1
 * @link git+https://github.com/diplomatiegouvfr/hornet-js.git
 * @license CECILL-2.1
 */
var hornet_js_utils_1 = require("hornet-js-utils");
var abstract_body_cell_1 = require("hornet-js-react-components/src/widget/table/column/cell/abstract-body-cell");
var React = require("react");
var notification_manager_1 = require("hornet-js-core/src/notification/notification-manager");
var picto_1 = require("hornet-js-react-components/src/img/picto");
var key_codes_1 = require("hornet-js-components/src/event/key-codes");
var template_1 = require("hornet-js-utils/src/template");
var classNames = require("classnames");
var logger = hornet_js_utils_1.Utils.getLogger("hornet-js-react-components.widget.table.column.cell.action.edition-action-body-cell");
var EditionActionBodyCell = /** @class */ (function (_super) {
    tslib_1.__extends(EditionActionBodyCell, _super);
    function EditionActionBodyCell(props, context) {
        var _this = _super.call(this, props, context) || this;
        /**
         * clic sur l'icone d'edition
         * @param e
         */
        _this.onClick = function (e) {
            if (_this.buttonsRef.indexOf(e.currentTarget) === 1 && _this.props.messageAlert && _this.props.showAlert) {
                e.stopPropagation();
                _this.props.showAlert(_this.state.messageAlert, _this.state.titleAlert, _this.setItemInEdition);
            }
            else {
                _this.setItemInEdition();
            }
        };
        _this.state.visible = true;
        // gestion du focus sur les boutons save et cancel de la cellule
        _this.state.submitFocused = false;
        if (_this.props.visible) {
            _this.state.visible = _this.props.visible(_this.props.value);
        }
        if (_this.props.messageAlert) {
            _this.state.messageAlert = new template_1.Template(_this.props.messageAlert).process(_this.props.value, _this.props.replaceUndef || "?");
            _this.state.titleAlert = new template_1.Template(_this.props.titleAlert).process(_this.props.value, _this.props.replaceUndef || "?");
        }
        return _this;
    }
    EditionActionBodyCell.prototype.shouldComponentUpdate = function (nextProps, nextState) {
        return _super.prototype.shouldComponentUpdate.call(this, nextProps, nextState) || nextState.isEditing !== this.state.isEditing;
    };
    /**
     * @inheritDoc
     */
    EditionActionBodyCell.prototype.renderCell = function () {
        logger.trace("render EditableActionBodyCell-> column:", this.props.coordinates.column, " - line:", this.props.coordinates.row);
        var classes = {
            "edition-button-action": true
        };
        var classesBefore = {
            "edition-button-action-before": true
        };
        if (this.state.className) {
            classes[this.state.className] = true;
        }
        // initialisation de la liste de ref  des boutons
        this.buttonsRef = [];
        return (this.state.visible ?
            !this.state.isEditing ? this.renderEditionBoutton(classesBefore) : this.renderSaveCancelBoutton(classes)
            : null);
    };
    /**
     * @inheritDoc
     */
    EditionActionBodyCell.prototype.getCellTitle = function () {
        return "";
    };
    /**
     * Permet de stocker l'item du tableau qui est en cours d'edition
     */
    EditionActionBodyCell.prototype.setItemInEdition = function () {
        // remove tous les messages d'erreur
        notification_manager_1.NotificationManager.cleanAll();
        this.props.contentState.setItemInEdition(this.state.isEditing ? null : this.props.value, this.state.isEditing ? null : this.props.coordinates.row);
    };
    /**
     *
     * @param classes
     * @returns {any}
     */
    EditionActionBodyCell.prototype.renderEditionBoutton = function (classes) {
        return (React.createElement("a", { className: classNames(classes), title: this.i18n(this.state.titleEdit, this.props.value), "aria-label": this.i18n(this.state.titleEdit, this.props.value), onClick: this.onClick, tabIndex: -1 },
            React.createElement("img", { src: picto_1.Picto.blue.quickEdit, className: this.state.classNameImg, alt: this.i18n(this.state.titleEdit, this.props.value), tabIndex: -1 })));
    };
    /**
     * Rendu des boutons save et cancel
     * @param classes
     * @returns {any}
     */
    EditionActionBodyCell.prototype.renderSaveCancelBoutton = function (classes) {
        var _this = this;
        return (React.createElement("div", { onKeyDown: this.switchFocus },
            React.createElement("button", { ref: function (elt) {
                    _this.setButtonsRef(elt);
                }, className: classNames(classes), title: this.state.titleSave, "aria-label": this.state.titleSave, type: "submit", tabIndex: 0 },
                React.createElement("img", { src: picto_1.Picto.editable.valider, className: this.state.classNameImg, alt: this.state.titleSave, tabIndex: -1 })),
            React.createElement("button", { ref: function (elt) {
                    _this.setButtonsRef(elt);
                }, className: classNames(classes), title: this.state.titleCancel, "aria-label": this.state.titleCancel, onClick: this.onClick, type: "button", tabIndex: 0 },
                React.createElement("img", { src: picto_1.Picto.editable.annuler, className: this.state.classNameImg, alt: this.state.titleCancel, tabIndex: -1 }))));
    };
    /**
     * permet de stocker les references des boutons de la cellule
     * @param ref
     */
    EditionActionBodyCell.prototype.setButtonsRef = function (ref) {
        if (ref) {
            this.buttonsRef.push(ref);
        }
    };
    /**
     * Permet de switcher le focus entre les deux boutons de la cellule
     * @param e
     */
    EditionActionBodyCell.prototype.switchFocus = function (e) {
        e.stopPropagation();
        var indexBtnSave = 0;
        var indexBtnCancel = 1;
        if (!this.state.isEditing) {
            this.handleKeyDown(e);
        }
        else if (e.keyCode === key_codes_1.KeyCodes.RIGHT_ARROW && this.state.submitFocused) {
            this.buttonsRef[indexBtnCancel].focus();
        }
        else if (e.keyCode === key_codes_1.KeyCodes.LEFT_ARROW && !this.state.submitFocused) {
            this.buttonsRef[indexBtnSave].focus();
        }
        else {
            this.handleKeyDown(e);
        }
        this.setState({ submitFocused: !this.state.submitFocused });
    };
    /**
     * Méthode permettant de mettre le focus sur le bouton
     * @inheritDoc
     */
    EditionActionBodyCell.prototype.handleCellFocus = function (tableCellRef) {
        if (this.buttonsRef.indexOf(document.activeElement) === -1) {
            if (tableCellRef instanceof HTMLButtonElement || tableCellRef.tagName == "A") {
                this.setState({ submitFocused: tableCellRef.getAttribute("type") === "submit" });
                tableCellRef.focus();
            }
            else if (tableCellRef && tableCellRef.children) {
                this.handleCellFocus(tableCellRef.children[0]);
            }
        }
    };
    return EditionActionBodyCell;
}(abstract_body_cell_1.AbstractBodyCell));
exports.EditionActionBodyCell = EditionActionBodyCell;

//# sourceMappingURL=edition-action-body-cell.js.map
