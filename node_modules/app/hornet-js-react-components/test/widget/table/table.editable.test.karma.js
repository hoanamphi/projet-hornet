"use strict";
/**
 * Copyright ou © ou Copr. Ministère de l'Europe et des Affaires étrangères (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * Ce logiciel est un programme informatique servant à faciliter la création
 * d'applications Web conformément aux référentiels généraux français : RGI, RGS et RGAA
 * <p/>
 * Ce logiciel est régi par la licence CeCILL soumise au droit français et
 * respectant les principes de diffusion des logiciels libres. Vous pouvez
 * utiliser, modifier et/ou redistribuer ce programme sous les conditions
 * de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA
 * sur le site "http://www.cecill.info".
 * <p/>
 * En contrepartie de l'accessibilité au code source et des droits de copie,
 * de modification et de redistribution accordés par cette licence, il n'est
 * offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
 * seule une responsabilité restreinte pèse sur l'auteur du programme,  le
 * titulaire des droits patrimoniaux et les concédants successifs.
 * <p/>
 * A cet égard  l'attention de l'utilisateur est attirée sur les risques
 * associés au chargement,  à l'utilisation,  à la modification et/ou au
 * développement et à la reproduction du logiciel par l'utilisateur étant
 * donné sa spécificité de logiciel libre, qui peut le rendre complexe à
 * manipuler et qui le réserve donc à des développeurs et des professionnels
 * avertis possédant  des  connaissances  informatiques approfondies.  Les
 * utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
 * logiciel à leurs besoins dans des conditions permettant d'assurer la
 * sécurité de leurs systèmes et ou de leurs données et, plus généralement,
 * à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.
 * <p/>
 * Le fait que vous puissiez accéder à cet en-tête signifie que vous avez
 * pris connaissance de la licence CeCILL, et que vous en avez accepté les
 * termes.
 * <p/>
 * <p/>
 * Copyright or © or Copr. Ministry for Europe and Foreign Affairs (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * This software is a computer program whose purpose is to facilitate creation of
 * web application in accordance with french general repositories : RGI, RGS and RGAA.
 * <p/>
 * This software is governed by the CeCILL license under French law and
 * abiding by the rules of distribution of free software.  You can  use,
 * modify and/ or redistribute the software under the terms of the CeCILL
 * license as circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 * <p/>
 * As a counterpart to the access to the source code and  rights to copy,
 * modify and redistribute granted by the license, users are provided only
 * with a limited warranty  and the software's author,  the holder of the
 * economic rights,  and the successive licensors  have only  limited
 * liability.
 * <p/>
 * In this respect, the user's attention is drawn to the risks associated
 * with loading,  using,  modifying and/or developing or reproducing the
 * software by the user in light of its specific status of free software,
 * that may mean  that it is complicated to manipulate,  and  that  also
 * therefore means  that it is reserved for developers  and  experienced
 * professionals having in-depth computer knowledge. Users are therefore
 * encouraged to load and test the software's suitability as regards their
 * requirements in conditions enabling the security of their systems and/or
 * data to be ensured and,  more generally, to use and operate it in the
 * same conditions as regards security.
 * <p/>
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL license and that you accept its terms.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * hornet-js-react-components - Ensemble des composants web React de base de hornet-js
 *
 * @author MEAE - Ministère de l'Europe et des Affaires étrangères
 * @version v5.1.1
 * @link git+https://github.com/diplomatiegouvfr/hornet-js.git
 * @license CECILL-2.1
 */
var chai = require('chai');
var expect = chai.expect;
var React = require("react");
var hornet_react_test_1 = require("hornet-js-test/src/hornet-react-test");
var test_run_1 = require("hornet-js-test/src/test-run");
var decorators_1 = require("hornet-js-test/src/decorators");
var assert = require("assert");
var datasource_1 = require("hornet-js-core/src/component/datasource/datasource");
var table_1 = require("hornet-js-react-components/src/widget/table/table");
var header_1 = require("hornet-js-react-components/src/widget/table/header");
/* Composant Content */
var content_1 = require("hornet-js-react-components/src/widget/table/content");
/*  Colonne du tableau */
var column_1 = require("hornet-js-react-components/src/widget/table/column");
var columns_1 = require("hornet-js-react-components/src/widget/table/columns");
var edition_action_column_1 = require("hornet-js-react-components/src/widget/table/column/edition-action-column");
var notification_1 = require("hornet-js-react-components/src/widget/notification/notification");
/** Tableau de liste de secteurs */
var dataSource;
var tableElement;
var table;
var data;
var schemaEditionTable;
var tableTest = /** @class */ (function (_super) {
    tslib_1.__extends(tableTest, _super);
    function tableTest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    tableTest.prototype.beforeEach = function () {
        data = [];
        var step = 1;
        for (var i = 1; i < 3; i++) {
            data.push({ id: i, label: "libelle" + i, desc: (step % 3 == 0) ? "desc" + 0 : "desc" + step++ });
        }
        dataSource = new datasource_1.DataSource(data);
        tableElement = (React.createElement("div", null,
            React.createElement(notification_1.Notification, { id: "notifTest" }),
            React.createElement(table_1.Table, { id: "lite" },
                React.createElement(header_1.Header, { title: "Tableau editable" }),
                React.createElement(content_1.Content, { dataSource: dataSource, notifId: "notifTest" },
                    React.createElement(columns_1.Columns, null,
                        React.createElement(column_1.Column, { keyColumn: "label", title: "libelle", sortable: true, editable: true }),
                        React.createElement(column_1.Column, { keyColumn: "desc", title: "desc", sortable: true }),
                        React.createElement(edition_action_column_1.EditionActionColumn, { keyColumn: "id", titleEdit: "modif rapide", titleSave: "Enregistrer", titleCancel: "Annuler", messageAlert: "Voulez vous annuler votre modification", titleAlert: "Annuler" }))))));
    };
    ;
    tableTest.prototype.testOk = function () {
        assert.equal(1, 1);
        this.end();
    };
    ;
    tableTest.prototype.editerElement = function () {
        var _this = this;
        table = this.renderIntoDocument(tableElement, "main99990");
        dataSource.on("fetch", function (value) {
            _this.triggerMouseEvent(document.querySelector('#main99990 #lite-0-colBody-0-2 .edition-button-action-before'), "click");
            expect(document.querySelector("#main99990 #lite-0-colBody-0-0 .table-cell-input")).to.exist;
            expect(document.querySelectorAll("#main99990 #lite-0-colBody-0-2 .edition-button-action").length).to.be.equal(2);
            _this.end();
        });
        dataSource.reload();
    };
    ;
    tableTest.prototype.AnnulerElement = function () {
        var _this = this;
        table = this.renderIntoDocument(tableElement, "main99991");
        dataSource.on("fetch", function (value) {
            _this.triggerMouseEvent(document.querySelector('#main99991 #lite-0-colBody-0-2 .edition-button-action-before'), "click");
            expect(document.querySelector("#main99991 #lite-0-colBody-0-0 .table-cell-input")).to.exist;
            expect(document.querySelector("#main99991 #lite-0-colBody-0-2 button[title=Annuler]")).to.exist;
            _this.triggerMouseEvent(document.querySelector("#main99991 #lite-0-colBody-0-2 button[title=Annuler]"), "click");
            setTimeout(function () {
                expect(document.querySelector(".widget-dialogue-header")).to.exist;
                expect(document.querySelector("button[id=confirmOK]")).to.exist;
                //Annimation fermeture de la boite de dialog
                _this.triggerMouseEvent(document.querySelector("button[id=confirmOK]"), "click");
                setTimeout(function () {
                    _this.end();
                }, 1000);
            }, 1000);
            //expect(document.querySelector(".widget-dialogue-header")).to.not.exist;
        });
        dataSource.reload();
    };
    ;
    tslib_1.__decorate([
        decorators_1.Decorators.beforeEach,
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], tableTest.prototype, "beforeEach", null);
    tslib_1.__decorate([
        decorators_1.Decorators.it('Test OK'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], tableTest.prototype, "testOk", null);
    tslib_1.__decorate([
        decorators_1.Decorators.it('afficher une cellule editable '),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], tableTest.prototype, "editerElement", null);
    tslib_1.__decorate([
        decorators_1.Decorators.it('Annuler modification cellule editable '),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], tableTest.prototype, "AnnulerElement", null);
    tableTest = tslib_1.__decorate([
        decorators_1.Decorators.describe('Test Karma table editable')
    ], tableTest);
    return tableTest;
}(hornet_react_test_1.HornetReactTest));
//lancement des Tests
test_run_1.runTest(new tableTest());

//# sourceMappingURL=table.editable.test.karma.js.map
