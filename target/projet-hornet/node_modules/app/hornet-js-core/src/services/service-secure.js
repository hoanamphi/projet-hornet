"use strict";
/**
 * Copyright ou © ou Copr. Ministère de l'Europe et des Affaires étrangères (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * Ce logiciel est un programme informatique servant à faciliter la création
 * d'applications Web conformément aux référentiels généraux français : RGI, RGS et RGAA
 * <p/>
 * Ce logiciel est régi par la licence CeCILL soumise au droit français et
 * respectant les principes de diffusion des logiciels libres. Vous pouvez
 * utiliser, modifier et/ou redistribuer ce programme sous les conditions
 * de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA
 * sur le site "http://www.cecill.info".
 * <p/>
 * En contrepartie de l'accessibilité au code source et des droits de copie,
 * de modification et de redistribution accordés par cette licence, il n'est
 * offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
 * seule une responsabilité restreinte pèse sur l'auteur du programme,  le
 * titulaire des droits patrimoniaux et les concédants successifs.
 * <p/>
 * A cet égard  l'attention de l'utilisateur est attirée sur les risques
 * associés au chargement,  à l'utilisation,  à la modification et/ou au
 * développement et à la reproduction du logiciel par l'utilisateur étant
 * donné sa spécificité de logiciel libre, qui peut le rendre complexe à
 * manipuler et qui le réserve donc à des développeurs et des professionnels
 * avertis possédant  des  connaissances  informatiques approfondies.  Les
 * utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
 * logiciel à leurs besoins dans des conditions permettant d'assurer la
 * sécurité de leurs systèmes et ou de leurs données et, plus généralement,
 * à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.
 * <p/>
 * Le fait que vous puissiez accéder à cet en-tête signifie que vous avez
 * pris connaissance de la licence CeCILL, et que vous en avez accepté les
 * termes.
 * <p/>
 * <p/>
 * Copyright or © or Copr. Ministry for Europe and Foreign Affairs (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * This software is a computer program whose purpose is to facilitate creation of
 * web application in accordance with french general repositories : RGI, RGS and RGAA.
 * <p/>
 * This software is governed by the CeCILL license under French law and
 * abiding by the rules of distribution of free software.  You can  use,
 * modify and/ or redistribute the software under the terms of the CeCILL
 * license as circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 * <p/>
 * As a counterpart to the access to the source code and  rights to copy,
 * modify and redistribute granted by the license, users are provided only
 * with a limited warranty  and the software's author,  the holder of the
 * economic rights,  and the successive licensors  have only  limited
 * liability.
 * <p/>
 * In this respect, the user's attention is drawn to the risks associated
 * with loading,  using,  modifying and/or developing or reproducing the
 * software by the user in light of its specific status of free software,
 * that may mean  that it is complicated to manipulate,  and  that  also
 * therefore means  that it is reserved for developers  and  experienced
 * professionals having in-depth computer knowledge. Users are therefore
 * encouraged to load and test the software's suitability as regards their
 * requirements in conditions enabling the security of their systems and/or
 * data to be ensured and,  more generally, to use and operate it in the
 * same conditions as regards security.
 * <p/>
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL license and that you accept its terms.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * hornet-js-core - Ensemble des composants qui forment le coeur de hornet-js
 *
 * @author MEAE - Ministère de l'Europe et des Affaires étrangères
 * @version v5.1.1
 * @link git+https://github.com/diplomatiegouvfr/hornet-js.git
 * @license CECILL-2.1
 */
var hornet_js_utils_1 = require("hornet-js-utils");
var logger = hornet_js_utils_1.Utils.getLogger("hornet-js-core.services.service-request");
var hornet_superagent_1 = require("hornet-js-core/src/services/hornet-superagent");
var service_request_1 = require("hornet-js-core/src/services/service-request");
var ServiceSecure = /** @class */ (function (_super) {
    tslib_1.__extends(ServiceSecure, _super);
    function ServiceSecure(prefixeAuth) {
        var _this = _super.call(this) || this;
        _this.prefixeAuth = prefixeAuth == null ? "Bearer " : prefixeAuth; // null or undefined
        return _this;
    }
    /**
     * envoi d'une requete
     * @param {HornetRequest} request objet representant une requête (methode 'get' par defaut)
     * @returns {Promise<Response>}
     */
    ServiceSecure.prototype.fetch = function (request) {
        var _this = this;
        var fetcher = this.getFetcher();
        var token = this.getToken();
        if (token) {
            if (!request.headers) {
                request.headers = {};
            }
            request.headers[ServiceSecure.HEADER_AUTH] = this.prefixeAuth + token;
        }
        return fetcher.fetch(request).then(function (result) { _this.saveToken(fetcher.response); return result; });
    };
    /**
     * envoi d'une requete avec la reponse superagent bindée sur un flux
     * @param {HornetRequest} request objet representant une requête
     * @param {NodeJS.WritableStream} pipedStream flux bindé sur la reponse superagent
     * @returns {Promise<Response>}
     */
    ServiceSecure.prototype.fetchOnStream = function (request, pipedStream) {
        var _this = this;
        var fetcher = this.getFetcher();
        var token = this.getToken();
        if (token) {
            if (!request.headers) {
                request.headers = {};
            }
            request.headers[ServiceSecure.HEADER_AUTH] = this.prefixeAuth + token;
        }
        return this.getFetcher().fetch(request, pipedStream).then(function (result) { _this.saveToken(fetcher.response); return result; });
    };
    /**
     * Récupère une instance de HornetSuperagent
     * @returns {HornetSuperAgent}
     */
    ServiceSecure.prototype.getFetcher = function () {
        return new hornet_superagent_1.HornetSuperAgent();
    };
    /**
     * methode à implementer retournant le token jwt
     * @return token JWT
     */
    ServiceSecure.prototype.getToken = function () {
        // Ajout du token à l'envoi
        if (hornet_js_utils_1.Utils.getContinuationStorage().get("hornet.request") &&
            hornet_js_utils_1.Utils.getContinuationStorage().get("hornet.request").getSession() &&
            hornet_js_utils_1.Utils.getContinuationStorage().get("hornet.request").getSession().authorizationToken) {
            return hornet_js_utils_1.Utils.getContinuationStorage().get("hornet.request").getSession().authorizationToken;
        }
    };
    /**
     * methode à implementer pour sauvegarder le token jwt
     * @param {Response} response response contenant l'header d'authentification
     * @return token JWT
     */
    ServiceSecure.prototype.saveToken = function (response) {
        if (response && response.get && response.get(ServiceSecure.HEADER_AUTH)
            && response.get(ServiceSecure.HEADER_AUTH).slice(0, "Bearer ".length) == "Bearer ") {
            var token = response.get(ServiceSecure.HEADER_AUTH).substring("Bearer ".length);
            hornet_js_utils_1.Utils.getContinuationStorage().get("hornet.request").getSession().authorizationToken = token;
        }
    };
    ServiceSecure.HEADER_AUTH = "Authorization";
    return ServiceSecure;
}(service_request_1.ServiceRequest));
exports.ServiceSecure = ServiceSecure;

//# sourceMappingURL=service-secure.js.map
