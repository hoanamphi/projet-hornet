"use strict";
/**
 * Copyright ou © ou Copr. Ministère de l'Europe et des Affaires étrangères (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * Ce logiciel est un programme informatique servant à faciliter la création
 * d'applications Web conformément aux référentiels généraux français : RGI, RGS et RGAA
 * <p/>
 * Ce logiciel est régi par la licence CeCILL soumise au droit français et
 * respectant les principes de diffusion des logiciels libres. Vous pouvez
 * utiliser, modifier et/ou redistribuer ce programme sous les conditions
 * de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA
 * sur le site "http://www.cecill.info".
 * <p/>
 * En contrepartie de l'accessibilité au code source et des droits de copie,
 * de modification et de redistribution accordés par cette licence, il n'est
 * offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
 * seule une responsabilité restreinte pèse sur l'auteur du programme,  le
 * titulaire des droits patrimoniaux et les concédants successifs.
 * <p/>
 * A cet égard  l'attention de l'utilisateur est attirée sur les risques
 * associés au chargement,  à l'utilisation,  à la modification et/ou au
 * développement et à la reproduction du logiciel par l'utilisateur étant
 * donné sa spécificité de logiciel libre, qui peut le rendre complexe à
 * manipuler et qui le réserve donc à des développeurs et des professionnels
 * avertis possédant  des  connaissances  informatiques approfondies.  Les
 * utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
 * logiciel à leurs besoins dans des conditions permettant d'assurer la
 * sécurité de leurs systèmes et ou de leurs données et, plus généralement,
 * à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.
 * <p/>
 * Le fait que vous puissiez accéder à cet en-tête signifie que vous avez
 * pris connaissance de la licence CeCILL, et que vous en avez accepté les
 * termes.
 * <p/>
 * <p/>
 * Copyright or © or Copr. Ministry for Europe and Foreign Affairs (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * This software is a computer program whose purpose is to facilitate creation of
 * web application in accordance with french general repositories : RGI, RGS and RGAA.
 * <p/>
 * This software is governed by the CeCILL license under French law and
 * abiding by the rules of distribution of free software.  You can  use,
 * modify and/ or redistribute the software under the terms of the CeCILL
 * license as circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 * <p/>
 * As a counterpart to the access to the source code and  rights to copy,
 * modify and redistribute granted by the license, users are provided only
 * with a limited warranty  and the software's author,  the holder of the
 * economic rights,  and the successive licensors  have only  limited
 * liability.
 * <p/>
 * In this respect, the user's attention is drawn to the risks associated
 * with loading,  using,  modifying and/or developing or reproducing the
 * software by the user in light of its specific status of free software,
 * that may mean  that it is complicated to manipulate,  and  that  also
 * therefore means  that it is reserved for developers  and  experienced
 * professionals having in-depth computer knowledge. Users are therefore
 * encouraged to load and test the software's suitability as regards their
 * requirements in conditions enabling the security of their systems and/or
 * data to be ensured and,  more generally, to use and operate it in the
 * same conditions as regards security.
 * <p/>
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL license and that you accept its terms.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * hornet-js-bean - Ensemble des décorateurs pour les beans hornet-js
 *
 * @author MEAE - Ministère de l'Europe et des Affaires étrangères
 * @version v5.1.1
 * @link git+https://github.com/diplomatiegouvfr/hornet-js.git
 * @license CECILL-2.1
 */
require("reflect-metadata");
var bean_utils_1 = require("hornet-js-bean/src/bean-utils");
function map(className) {
    return function (target, key, description) {
        if (typeof description != 'undefined') {
            if (description instanceof Object) {
                var fn_1 = target[key];
                description.value = function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    var fnParam = [];
                    if (target.__mapParams__ && target.__mapParams__[key]) {
                        var _loop_1 = function (index) {
                            fnParam.push(bean_utils_1.BeanUtils.mapArray(target.__mapParams__[key][index], args[index]).then(function (result) {
                                args[index] = result;
                            }));
                        };
                        for (var index in target.__mapParams__[key]) {
                            _loop_1(index);
                        }
                    }
                    var _instance = this;
                    var _className = className;
                    return new Promise(function (resolve, reject) {
                        Promise.all(fnParam).then(function () {
                            try {
                                var result = void 0;
                                if (_className) {
                                    result = fn_1.apply(_instance, args).then(function (values) {
                                        if (values instanceof Array) {
                                            values.map(function (item) {
                                                checkDateInstance(item, _className);
                                            });
                                        }
                                        else {
                                            checkDateInstance(values, _className);
                                        }
                                        return bean_utils_1.BeanUtils.mapArray(_className, values);
                                    });
                                }
                                else {
                                    result = fn_1.apply(_instance, args);
                                }
                                resolve(result);
                            }
                            catch (e) {
                                reject(e);
                            }
                        });
                    });
                };
            }
            else {
                if (!target.__mapParams__) {
                    target.__mapParams__ = {};
                }
                if (!target.__mapParams__[key]) {
                    target.__mapParams__[key] = {};
                }
                target.__mapParams__[key][description] = className;
            }
        }
        else {
            var mapfield = void 0;
            if (!target.__mapFields__) {
                mapfield = [];
            }
            else {
                mapfield = JSON.parse(target.__mapFields__);
            }
            if (!target.__mapClass__) {
                target.__mapClass__ = {};
            }
            if (className) {
                target.__mapClass__[key] = className;
            }
            mapfield.push(key);
            target.__mapFields__ = JSON.stringify(mapfield);
        }
    };
}
exports.default = map;
;
var checkDateInstance = function (item, _className) {
    for (var attribute in item.dataValues) {
        var type = Reflect.getMetadata("design:type", _className.prototype, attribute);
        if (type && (type.name == "Date") && item.dataValues[attribute] && !(item.dataValues[attribute] instanceof type)) {
            var date = new Date(item.dataValues[attribute]);
            item.dataValues[attribute] = date;
        }
        else if (type && (type.name == "String") && item.dataValues[attribute] && (item.dataValues[attribute] instanceof Date)) {
            item.dataValues[attribute] = item.dataValues[attribute].toDateString();
        }
    }
};

//# sourceMappingURL=Map.js.map
