"use strict";
/**
 * Copyright ou © ou Copr. Ministère de l'Europe et des Affaires étrangères (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * Ce logiciel est un programme informatique servant à faciliter la création
 * d'applications Web conformément aux référentiels généraux français : RGI, RGS et RGAA
 * <p/>
 * Ce logiciel est régi par la licence CeCILL soumise au droit français et
 * respectant les principes de diffusion des logiciels libres. Vous pouvez
 * utiliser, modifier et/ou redistribuer ce programme sous les conditions
 * de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA
 * sur le site "http://www.cecill.info".
 * <p/>
 * En contrepartie de l'accessibilité au code source et des droits de copie,
 * de modification et de redistribution accordés par cette licence, il n'est
 * offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
 * seule une responsabilité restreinte pèse sur l'auteur du programme,  le
 * titulaire des droits patrimoniaux et les concédants successifs.
 * <p/>
 * A cet égard  l'attention de l'utilisateur est attirée sur les risques
 * associés au chargement,  à l'utilisation,  à la modification et/ou au
 * développement et à la reproduction du logiciel par l'utilisateur étant
 * donné sa spécificité de logiciel libre, qui peut le rendre complexe à
 * manipuler et qui le réserve donc à des développeurs et des professionnels
 * avertis possédant  des  connaissances  informatiques approfondies.  Les
 * utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
 * logiciel à leurs besoins dans des conditions permettant d'assurer la
 * sécurité de leurs systèmes et ou de leurs données et, plus généralement,
 * à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.
 * <p/>
 * Le fait que vous puissiez accéder à cet en-tête signifie que vous avez
 * pris connaissance de la licence CeCILL, et que vous en avez accepté les
 * termes.
 * <p/>
 * <p/>
 * Copyright or © or Copr. Ministry for Europe and Foreign Affairs (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * This software is a computer program whose purpose is to facilitate creation of
 * web application in accordance with french general repositories : RGI, RGS and RGAA.
 * <p/>
 * This software is governed by the CeCILL license under French law and
 * abiding by the rules of distribution of free software.  You can  use,
 * modify and/ or redistribute the software under the terms of the CeCILL
 * license as circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 * <p/>
 * As a counterpart to the access to the source code and  rights to copy,
 * modify and redistribute granted by the license, users are provided only
 * with a limited warranty  and the software's author,  the holder of the
 * economic rights,  and the successive licensors  have only  limited
 * liability.
 * <p/>
 * In this respect, the user's attention is drawn to the risks associated
 * with loading,  using,  modifying and/or developing or reproducing the
 * software by the user in light of its specific status of free software,
 * that may mean  that it is complicated to manipulate,  and  that  also
 * therefore means  that it is reserved for developers  and  experienced
 * professionals having in-depth computer knowledge. Users are therefore
 * encouraged to load and test the software's suitability as regards their
 * requirements in conditions enabling the security of their systems and/or
 * data to be ensured and,  more generally, to use and operate it in the
 * same conditions as regards security.
 * <p/>
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL license and that you accept its terms.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * hornet-js-passport - Gestion d'authentification
 *
 * @author
 * @version v5.1.1
 * @link git+https://github.com/diplomatiegouvfr/hornet-js.git
 * @license
 */
var hornet_js_utils_1 = require("hornet-js-utils");
var React = require("react");
var hornet_component_1 = require("hornet-js-react-components/src/widget/component/hornet-component");
var buttons_area_1 = require("hornet-js-react-components/src/widget/form/buttons-area");
var _ = require("lodash");
var thumbnail_css_1 = require("hornet-js-passport/src/strategy/saml/views/cnx/thumbnail-css");
var logger = hornet_js_utils_1.Utils.getLogger("hornet-js-passport.strategy.saml.views.connexion-page");
/**
 * Ecran de connexion
 */
var ConnexionPage = /** @class */ (function (_super) {
    tslib_1.__extends(ConnexionPage, _super);
    function ConnexionPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ConnexionPage.prototype._renderErrorDiv = function () {
        var urlImgError = this.genUrlStatic("/img/error.gif");
        if (_.isArray(this.state.errorMessage) && this.state.errorMessage.length >= 1) {
            return (React.createElement("div", { className: "errors", id: "status" },
                React.createElement("img", { src: this.props.staticUrl + "/img/error.gif", alt: "Erreur : " }),
                React.createElement("span", null, this.state.errorMessage)));
        }
        else {
            return null;
        }
    };
    /**
     * @inheritDoc
     */
    ConnexionPage.prototype.render = function () {
        logger.trace("VIEW ConnexionPage SAML render ");
        var h1Style = _.assign(thumbnail_css_1.styleCSS.tac, thumbnail_css_1.styleCSS.bgColorMain);
        var headerStyle = thumbnail_css_1.styleCSS.header;
        return (React.createElement("html", { lang: 'fr' },
            React.createElement("head", null,
                React.createElement("title", null, "Authentification SAML"),
                React.createElement("meta", { httpEquiv: "Content-Type", content: "text/html; charset=UTF-8" }),
                React.createElement("link", { rel: "icon", type: "image/png", href: this.genUrlStatic("/img/logoHornet.png") }),
                React.createElement("link", { rel: 'stylesheet', type: 'text/css', href: this.genUrlStatic("/css/auth.css") }),
                React.createElement("link", { rel: "stylesheet", type: "text/css", href: ConnexionPage.genUrlTheme(this.props.fwkTheme) }),
                React.createElement("link", { rel: "stylesheet", type: "text/css", href: this.genUrlStatic(this.props.appTheme) })),
            React.createElement("body", { id: 'auth' },
                React.createElement("div", { id: "app" },
                    React.createElement("div", { id: "site" },
                        React.createElement("div", { id: "content" },
                            React.createElement("h1", { id: "app-name" }, "Authentification"),
                            React.createElement("form", { id: "fm1", className: "fm-v", method: "post", action: "./login" },
                                React.createElement("h2", { style: { "borderBottom": "0px" } }, "S\u00E9lection IDP"),
                                this.renderIDPButtons())))))));
    };
    /**
     * Rendu des boutons liés aux IDP
     * @returns {any}
     */
    ConnexionPage.prototype.renderIDPButtons = function () {
        return (React.createElement(buttons_area_1.ButtonsArea, null, this.props.idps.map(function (idp, i) {
            return (React.createElement("button", { key: "idp-button-" + i, type: "submit", name: "idp", value: JSON.stringify(idp), className: "hornet-button", style: thumbnail_css_1.styleCSS.bdr3 }, idp.name));
        })));
    };
    ConnexionPage.defaultProps = {
        appTheme: "/css/theme.css",
        fwkTheme: process.env.NODE_ENV === "production" ? "/css/theme-min.css" : "/css/theme.css",
    };
    return ConnexionPage;
}(hornet_component_1.HornetComponent));
exports.ConnexionPage = ConnexionPage;

//# sourceMappingURL=connexion-page.js.map
