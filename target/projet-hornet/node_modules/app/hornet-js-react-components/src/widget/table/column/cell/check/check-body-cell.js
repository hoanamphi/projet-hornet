"use strict";
/**
 * Copyright ou © ou Copr. Ministère de l'Europe et des Affaires étrangères (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * Ce logiciel est un programme informatique servant à faciliter la création
 * d'applications Web conformément aux référentiels généraux français : RGI, RGS et RGAA
 * <p/>
 * Ce logiciel est régi par la licence CeCILL soumise au droit français et
 * respectant les principes de diffusion des logiciels libres. Vous pouvez
 * utiliser, modifier et/ou redistribuer ce programme sous les conditions
 * de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA
 * sur le site "http://www.cecill.info".
 * <p/>
 * En contrepartie de l'accessibilité au code source et des droits de copie,
 * de modification et de redistribution accordés par cette licence, il n'est
 * offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
 * seule une responsabilité restreinte pèse sur l'auteur du programme,  le
 * titulaire des droits patrimoniaux et les concédants successifs.
 * <p/>
 * A cet égard  l'attention de l'utilisateur est attirée sur les risques
 * associés au chargement,  à l'utilisation,  à la modification et/ou au
 * développement et à la reproduction du logiciel par l'utilisateur étant
 * donné sa spécificité de logiciel libre, qui peut le rendre complexe à
 * manipuler et qui le réserve donc à des développeurs et des professionnels
 * avertis possédant  des  connaissances  informatiques approfondies.  Les
 * utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
 * logiciel à leurs besoins dans des conditions permettant d'assurer la
 * sécurité de leurs systèmes et ou de leurs données et, plus généralement,
 * à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.
 * <p/>
 * Le fait que vous puissiez accéder à cet en-tête signifie que vous avez
 * pris connaissance de la licence CeCILL, et que vous en avez accepté les
 * termes.
 * <p/>
 * <p/>
 * Copyright or © or Copr. Ministry for Europe and Foreign Affairs (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * This software is a computer program whose purpose is to facilitate creation of
 * web application in accordance with french general repositories : RGI, RGS and RGAA.
 * <p/>
 * This software is governed by the CeCILL license under French law and
 * abiding by the rules of distribution of free software.  You can  use,
 * modify and/ or redistribute the software under the terms of the CeCILL
 * license as circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 * <p/>
 * As a counterpart to the access to the source code and  rights to copy,
 * modify and redistribute granted by the license, users are provided only
 * with a limited warranty  and the software's author,  the holder of the
 * economic rights,  and the successive licensors  have only  limited
 * liability.
 * <p/>
 * In this respect, the user's attention is drawn to the risks associated
 * with loading,  using,  modifying and/or developing or reproducing the
 * software by the user in light of its specific status of free software,
 * that may mean  that it is complicated to manipulate,  and  that  also
 * therefore means  that it is reserved for developers  and  experienced
 * professionals having in-depth computer knowledge. Users are therefore
 * encouraged to load and test the software's suitability as regards their
 * requirements in conditions enabling the security of their systems and/or
 * data to be ensured and,  more generally, to use and operate it in the
 * same conditions as regards security.
 * <p/>
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL license and that you accept its terms.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * hornet-js-react-components - Ensemble des composants web React de base de hornet-js
 *
 * @author MEAE - Ministère de l'Europe et des Affaires étrangères
 * @version v5.1.1
 * @link git+https://github.com/diplomatiegouvfr/hornet-js.git
 * @license CECILL-2.1
 */
var hornet_js_utils_1 = require("hornet-js-utils");
var array_utils_1 = require("hornet-js-utils/src/array-utils");
var abstract_body_cell_1 = require("hornet-js-react-components/src/widget/table/column/cell/abstract-body-cell");
var checkbox_1 = require("hornet-js-react-components/src/widget/form/checkbox");
var React = require("react");
var logger = hornet_js_utils_1.Utils.getLogger("hornet-js-react-components.widget.table.column.cell.check.check-body-cell");
var CheckBodyCell = /** @class */ (function (_super) {
    tslib_1.__extends(CheckBodyCell, _super);
    function CheckBodyCell(props, context) {
        var _this = _super.call(this, props, context) || this;
        /**
         * Action exécutée sur un click de la checkbox
         * @param e
         */
        _this.handleToggleCheckBox = function (e) {
            _this.props.toggleSelectLines(_this.props.value);
            e.stopPropagation();
        };
        /**
         * mise a jour du state apres selection de la check box
         * @param selectedItems
         */
        _this.handleChange = function (selectedItems) {
            logger.trace("checkbodycell => handlChange", _this.props.cellCoordinate);
            if (_this.checkBoxBodyRef) {
                if (array_utils_1.ArrayUtils.getIndexById(selectedItems, _this.props.value) !== -1) {
                    _this.setState({ isSelected: true });
                }
                else {
                    _this.setState({ isSelected: false });
                }
            }
        };
        _this.props.dataSource.on("select", _this.handleChange);
        return _this;
    }
    /**
     * @inheritDoc
     */
    CheckBodyCell.prototype.shouldComponentUpdate = function (nextProps, nextState) {
        return _super.prototype.shouldComponentUpdate.call(this, nextProps, nextState)
            || nextState.isSelected != this.state.isSelected
            || nextState.isEditing != this.state.isEditing;
    };
    /**
     * @inheritDoc
     */
    CheckBodyCell.prototype.componentWillUnmount = function () {
        _super.prototype.componentWillUnmount.call(this);
        this.props.dataSource.removeListener("select", this.handleChange);
    };
    /**
     * @inheritDoc
     */
    CheckBodyCell.prototype.renderCell = function () {
        var _this = this;
        logger.trace("render checkBodyCell-> column:", this.props.coordinates.column, " - line:", this.props.coordinates.row);
        var title = this.state.isSelected ? this.props.altUnselect : this.props.altSelect;
        var checkBoxProps = {
            ref: function (instance) {
                _this.checkBoxBodyRef = instance;
            },
            onChange: this.handleToggleCheckBox,
            key: this.props.keyColumn + "-" + this.state.isSelected,
            checked: this.state.isSelected,
            name: "selectedItems-" + this.props.keyColumn,
            tabIndex: -1,
            disabled: this.setDisabled(),
            title: title && this.i18n(title, this.props.value)
        };
        return (React.createElement(checkbox_1.CheckBox, tslib_1.__assign({}, checkBoxProps)));
    };
    /**
     * @inheritDoc
     */
    CheckBodyCell.prototype.setDisabled = function () {
        return this.props.contentState.itemInEdition !== undefined && this.props.contentState.itemInEdition !== null;
    };
    /**
     * @inheritDoc
     */
    CheckBodyCell.prototype.getCellTitle = function () {
        return "";
    };
    /**
     * Override de la méthode blurAction d'AbstractCell
     * retire la tabulation à une cellule que l'on vient de quitter
     * par navigation clavier
     * @param tableCellRef cellule perdant le focus
     */
    CheckBodyCell.prototype.blurActions = function (tableCellRef) {
        // on met le focus sur le premier element HTML de type input
        if (tableCellRef instanceof HTMLInputElement) {
            tableCellRef.tabIndex = -1;
        }
        else if (tableCellRef.children) {
            this.blurActions(tableCellRef.children[0]);
        }
    };
    /**+
     * @inheritDoc
     */
    CheckBodyCell.prototype.handleCellFocus = function (tableCellRef) {
        if (tableCellRef) {
            if (tableCellRef instanceof HTMLInputElement) {
                tableCellRef.focus();
                tableCellRef.tabIndex = 0;
            }
            else if (tableCellRef.children) {
                this.handleCellFocus(tableCellRef.children[0]);
            }
        }
    };
    return CheckBodyCell;
}(abstract_body_cell_1.AbstractBodyCell));
exports.CheckBodyCell = CheckBodyCell;

//# sourceMappingURL=check-body-cell.js.map
