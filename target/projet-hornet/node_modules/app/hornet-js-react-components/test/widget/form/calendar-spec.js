"use strict";
/**
 * Copyright ou © ou Copr. Ministère de l'Europe et des Affaires étrangères (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * Ce logiciel est un programme informatique servant à faciliter la création
 * d'applications Web conformément aux référentiels généraux français : RGI, RGS et RGAA
 * <p/>
 * Ce logiciel est régi par la licence CeCILL soumise au droit français et
 * respectant les principes de diffusion des logiciels libres. Vous pouvez
 * utiliser, modifier et/ou redistribuer ce programme sous les conditions
 * de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA
 * sur le site "http://www.cecill.info".
 * <p/>
 * En contrepartie de l'accessibilité au code source et des droits de copie,
 * de modification et de redistribution accordés par cette licence, il n'est
 * offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
 * seule une responsabilité restreinte pèse sur l'auteur du programme,  le
 * titulaire des droits patrimoniaux et les concédants successifs.
 * <p/>
 * A cet égard  l'attention de l'utilisateur est attirée sur les risques
 * associés au chargement,  à l'utilisation,  à la modification et/ou au
 * développement et à la reproduction du logiciel par l'utilisateur étant
 * donné sa spécificité de logiciel libre, qui peut le rendre complexe à
 * manipuler et qui le réserve donc à des développeurs et des professionnels
 * avertis possédant  des  connaissances  informatiques approfondies.  Les
 * utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
 * logiciel à leurs besoins dans des conditions permettant d'assurer la
 * sécurité de leurs systèmes et ou de leurs données et, plus généralement,
 * à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.
 * <p/>
 * Le fait que vous puissiez accéder à cet en-tête signifie que vous avez
 * pris connaissance de la licence CeCILL, et que vous en avez accepté les
 * termes.
 * <p/>
 * <p/>
 * Copyright or © or Copr. Ministry for Europe and Foreign Affairs (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * This software is a computer program whose purpose is to facilitate creation of
 * web application in accordance with french general repositories : RGI, RGS and RGAA.
 * <p/>
 * This software is governed by the CeCILL license under French law and
 * abiding by the rules of distribution of free software.  You can  use,
 * modify and/ or redistribute the software under the terms of the CeCILL
 * license as circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 * <p/>
 * As a counterpart to the access to the source code and  rights to copy,
 * modify and redistribute granted by the license, users are provided only
 * with a limited warranty  and the software's author,  the holder of the
 * economic rights,  and the successive licensors  have only  limited
 * liability.
 * <p/>
 * In this respect, the user's attention is drawn to the risks associated
 * with loading,  using,  modifying and/or developing or reproducing the
 * software by the user in light of its specific status of free software,
 * that may mean  that it is complicated to manipulate,  and  that  also
 * therefore means  that it is reserved for developers  and  experienced
 * professionals having in-depth computer knowledge. Users are therefore
 * encouraged to load and test the software's suitability as regards their
 * requirements in conditions enabling the security of their systems and/or
 * data to be ensured and,  more generally, to use and operate it in the
 * same conditions as regards security.
 * <p/>
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL license and that you accept its terms.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * hornet-js-react-components - Ensemble des composants web React de base de hornet-js
 *
 * @author MEAE - Ministère de l'Europe et des Affaires étrangères
 * @version v5.1.1
 * @link git+https://github.com/diplomatiegouvfr/hornet-js.git
 * @license CECILL-2.1
 */
var test_logger_1 = require("hornet-js-test/src/test-logger");
var logger_1 = require("hornet-js-utils/src/logger");
logger_1.Logger.prototype.buildLogger = test_logger_1.TestLogger.getLoggerBuilder({
    "appenders": {
        "console": {
            "type": "console",
            "layout": {
                "type": "pattern",
                "pattern": "%[%d{ISO8601}|%p|%c|%m%]"
            }
        }
    },
    "categories": {
        "default": { "appenders": ["console"], "level": "INFO" }
    }
});
var test_utils_1 = require("hornet-js-test/src/test-utils");
var react_test_utils_1 = require("hornet-js-test/src/react-test-utils");
var React = require("react");
var calendar_field_1 = require("hornet-js-react-components/src/widget/form/calendar-field");
var hornet_js_utils_1 = require("hornet-js-utils");
var hornet_component_1 = require("hornet-js-react-components/src/widget/component/hornet-component");
var fr_fr_1 = require("test/locale/fr-fr");
var expect = test_utils_1.TestUtils.chai.expect;
var render = react_test_utils_1.ReactTestUtils.render;
/**
 * Définit les messages internationalisés du composant sans passer par un middleware
 */
var TestCalendar = /** @class */ (function (_super) {
    tslib_1.__extends(TestCalendar, _super);
    function TestCalendar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @override
     */
    TestCalendar.prototype.i18n = function (keysString, values) {
        return hornet_component_1.HornetComponent.getI18n(keysString, values, {
            "locale": "",
            "messages": require("hornet-js-core/src/i18n/hornet-messages-components")
        });
    };
    return TestCalendar;
}(calendar_field_1.CalendarField));
describe.skip("Calendar", function () {
    before(function () {
        hornet_js_utils_1.Utils.setConfigObj(require("hornet-js-utils/test/config/default.json"));
    });
    it.skip("render with only required props", function () {
        var $ = render(function () {
            return React.createElement(TestCalendar, { name: "testCalendar" });
        });
        // Assert
        var $inputDate = $("input");
        expect($inputDate).to.exist;
        expect($inputDate.attr("name")).equals("testCalendar");
    });
    it.skip("render with default value", function () {
        var $ = render(function () {
            return React.createElement(TestCalendar, { name: "testCalendar", currentValue: "18/04/2016" });
        });
        // Assert
        var $inputDate = $("input");
        expect($inputDate).to.exist;
        expect($inputDate.attr("value")).equals("18/04/2016");
    });
    it.skip("render with specific date format", function () {
        var $ = render(function () {
            return React.createElement(TestCalendar, { name: "testCalendar", currentValue: "2016-04-18", dateFormats: ["yyyy-MM-dd"] });
        });
        // Assert
        var $inputDate = $("input");
        expect($inputDate).to.exist;
        expect($inputDate.attr("value")).equals("2016-04-18");
    });
    it.skip("should format valid date", function () {
        var hornetCalendar = new TestCalendar({ name: "testCalendar" });
        // var dateToFormat:Date = new Date(2014, 3, 16);
        // la date est instanciée avec le fuseau local (UTC+2).
        // L'heure étant 00h00, la date UTC (renvoyee par getTime) correspond au jour precedent à 22h (15/04/2014)
        // pour corriger le probleme :
        // preciser une heure (12h00 par exemple)
        // var dateToFormat:Date = new Date(2014, 3, 16,12,0,0,0);
        // ou bien instancier la date sur le fuseau UTC.
        var dateToFormat = new Date(Date.UTC(2016, 3, 18)).getTime();
        var formattedDate = hornetCalendar.formatCalendarDate(dateToFormat, fr_fr_1.TEST_CALENDAR_LOCALE);
        expect(formattedDate).equals("18/04/2016");
    });
    it("should format undefined date to empty", function () {
        var hornetCalendar = new TestCalendar({ name: "testCalendar" });
        var formattedDate = hornetCalendar.formatCalendarDate(undefined, fr_fr_1.TEST_CALENDAR_LOCALE);
        expect(formattedDate).empty;
    });
});

//# sourceMappingURL=calendar-spec.js.map
