/**
 * Copyright ou © ou Copr. Ministère de l'Europe et des Affaires étrangères (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * Ce logiciel est un programme informatique servant à faciliter la création
 * d'applications Web conformément aux référentiels généraux français : RGI, RGS et RGAA
 * <p/>
 * Ce logiciel est régi par la licence CeCILL soumise au droit français et
 * respectant les principes de diffusion des logiciels libres. Vous pouvez
 * utiliser, modifier et/ou redistribuer ce programme sous les conditions
 * de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA
 * sur le site "http://www.cecill.info".
 * <p/>
 * En contrepartie de l'accessibilité au code source et des droits de copie,
 * de modification et de redistribution accordés par cette licence, il n'est
 * offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
 * seule une responsabilité restreinte pèse sur l'auteur du programme,  le
 * titulaire des droits patrimoniaux et les concédants successifs.
 * <p/>
 * A cet égard  l'attention de l'utilisateur est attirée sur les risques
 * associés au chargement,  à l'utilisation,  à la modification et/ou au
 * développement et à la reproduction du logiciel par l'utilisateur étant
 * donné sa spécificité de logiciel libre, qui peut le rendre complexe à
 * manipuler et qui le réserve donc à des développeurs et des professionnels
 * avertis possédant  des  connaissances  informatiques approfondies.  Les
 * utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
 * logiciel à leurs besoins dans des conditions permettant d'assurer la
 * sécurité de leurs systèmes et ou de leurs données et, plus généralement,
 * à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.
 * <p/>
 * Le fait que vous puissiez accéder à cet en-tête signifie que vous avez
 * pris connaissance de la licence CeCILL, et que vous en avez accepté les
 * termes.
 * <p/>
 * <p/>
 * Copyright or © or Copr. Ministry for Europe and Foreign Affairs (2017)
 * <p/>
 * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr
 * <p/>
 * This software is a computer program whose purpose is to facilitate creation of
 * web application in accordance with french general repositories : RGI, RGS and RGAA.
 * <p/>
 * This software is governed by the CeCILL license under French law and
 * abiding by the rules of distribution of free software.  You can  use,
 * modify and/ or redistribute the software under the terms of the CeCILL
 * license as circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 * <p/>
 * As a counterpart to the access to the source code and  rights to copy,
 * modify and redistribute granted by the license, users are provided only
 * with a limited warranty  and the software's author,  the holder of the
 * economic rights,  and the successive licensors  have only  limited
 * liability.
 * <p/>
 * In this respect, the user's attention is drawn to the risks associated
 * with loading,  using,  modifying and/or developing or reproducing the
 * software by the user in light of its specific status of free software,
 * that may mean  that it is complicated to manipulate,  and  that  also
 * therefore means  that it is reserved for developers  and  experienced
 * professionals having in-depth computer knowledge. Users are therefore
 * encouraged to load and test the software's suitability as regards their
 * requirements in conditions enabling the security of their systems and/or
 * data to be ensured and,  more generally, to use and operate it in the
 * same conditions as regards security.
 * <p/>
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL license and that you accept its terms.
 *
 */
/**
 * hornet-js-react-components - Ensemble des composants web React de base de hornet-js
 *
 * @author MEAE - Ministère de l'Europe et des Affaires étrangères
 * @version v5.1.1
 * @link git+https://github.com/diplomatiegouvfr/hornet-js.git
 * @license CECILL-2.1
 */
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var chai = require('chai');
var expect = chai.expect;
var React = require("react");
var base_test_1 = require("hornet-js-test/src/base-test");
var test_run_1 = require("hornet-js-test/src/test-run");
var decorators_1 = require("hornet-js-test/src/decorators");
var assert = require("assert");
var datasource_1 = require("hornet-js-core/src/component/datasource/datasource");
var table_1 = require("hornet-js-react-components/src/widget/table/table");
var header_1 = require("hornet-js-react-components/src/widget/table/header");
/* Composant Content */
var content_1 = require("hornet-js-react-components/src/widget/table/content");
/*  Colonne du tableau */
var column_1 = require("hornet-js-react-components/src/widget/table/column");
var columns_1 = require("hornet-js-react-components/src/widget/table/columns");
var check_column_1 = require("hornet-js-react-components/src/widget/table/column/check-column");
var tabs_1 = require("hornet-js-react-components/src/widget/tab/tabs");
var tab_1 = require("hornet-js-react-components/src/widget/tab/tab");
var tab_content_1 = require("hornet-js-react-components/src/widget/tab/tab-content");
var tab_header_1 = require("hornet-js-react-components/src/widget/tab/tab-header");
var dataSource;
var tabsElement;
var tabs;
var data;
var fnt;
var beforeHideTabCount = 0;
var afterShowTabCount = 0;
var onSelectCount = 0;
var tabsTest = /** @class */ (function (_super) {
    tslib_1.__extends(tabsTest, _super);
    function tabsTest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    tabsTest.prototype.beforeEach = function () {
        data = [];
        tabs = null;
        beforeHideTabCount = 0;
        afterShowTabCount = 0;
        onSelectCount = 0;
        var step = 1;
        for (var i = 1; i < 10; i++) {
            data.push({ id: i, label: "libelle" + i, desc: (step % 3 == 0) ? "desc" + 0 : "desc" + step++ });
        }
        dataSource = new datasource_1.DataSource(data);
        fnt = function () {
            if (!dataSource.status) {
                dataSource.init();
            }
        };
        tabsElement = (React.createElement(tabs_1.Tabs, { id: "tabs", selectedTabIndex: 0, beforeHideTab: function () {
                beforeHideTabCount++;
            }, afterShowTab: function () {
                afterShowTabCount++;
            } },
            React.createElement(tab_1.Tab, { title: "tab1" },
                React.createElement("div", null, "TabContent1")),
            React.createElement(tab_1.Tab, { title: "tab2" },
                React.createElement("div", null, "TabContent2")),
            React.createElement(tab_1.Tab, { title: "tab3", mount: false, onClick: fnt, onSelect: function (select) {
                    select === true ? onSelectCount += 10 : onSelectCount += 1;
                } },
                React.createElement(tab_header_1.TabHeader, null, "tab3 Async"),
                React.createElement(tab_content_1.TabContent, { dataSource: dataSource },
                    React.createElement(table_1.Table, { id: "lite" },
                        React.createElement(header_1.Header, { title: "contentTab3" }),
                        React.createElement(content_1.Content, { dataSource: dataSource },
                            React.createElement(columns_1.Columns, null,
                                React.createElement(check_column_1.CheckColumn, { keyColumn: "id" }),
                                React.createElement(column_1.Column, { keyColumn: "label", title: "libelle" }),
                                React.createElement(column_1.Column, { keyColumn: "desc", title: "desc" }))))))));
    };
    ;
    tabsTest.prototype.testOk = function () {
        assert.equal(1, 1);
        this.end();
    };
    ;
    tabsTest.prototype.displayTabAsyncNotLoaded = function () {
        tabs = this.renderIntoDocument(tabsElement, "main1");
        expect(document.querySelector('#main1 #tabs-sectionTabPanel-2[style*="display: none"]')).to.exist;
        expect(document.querySelector('#main1 #tabs-sectionTabPanel-2[style*="display: none"]')['children'].length).to.be.equal(1);
        expect(document.querySelector('#main1 #tabs-tabList-item-2')['text']).to.be.equal('tab3 Async');
        this.end();
    };
    ;
    tabsTest.prototype.displayTabAsync = function () {
        tabs = this.renderIntoDocument(tabsElement, "main2");
        this.triggerMouseEvent(document.querySelector('#main2 #tabs-tabList-item-2'), 'focus');
        expect(document.querySelector('#main2 #tabs-sectionTabPanel-2[style*="display: block"]')).to.exist;
        expect(document.querySelector('#main2 #tabs-sectionTabPanel-2[style*="display: block"] .tab-panel .datatable-container')).to.exist;
        expect(document.querySelector('#main2 #tabs-tabList-item-2')['text']).to.be.equal('tab3 Async');
        this.end();
    };
    ;
    tabsTest.prototype.hideShowTabs = function () {
        var _this = this;
        setTimeout(function () {
            tabs = _this.renderIntoDocument(tabsElement, "main3");
            setTimeout(function () {
                _this.triggerMouseEvent(document.querySelector('#main3 #tabs-2'), 'focus');
                expect(beforeHideTabCount).to.equal(1);
                expect(afterShowTabCount).to.equal(2);
            }, 250);
            _this.triggerMouseEvent(document.querySelector('#main3 #tabs-1'), 'focus');
            setTimeout(function () {
                expect(beforeHideTabCount).to.equal(2);
                expect(afterShowTabCount).to.equal(3);
                expect(onSelectCount).to.equal(11);
            }, 250);
            _this.end();
        }, 250);
    };
    tabsTest.prototype.afterShowTabCount = function () {
        console.log("beforeHideTabCount", beforeHideTabCount);
        console.log("afterShowTabCount", afterShowTabCount);
    };
    tslib_1.__decorate([
        decorators_1.Decorators.beforeEach,
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], tabsTest.prototype, "beforeEach", null);
    tslib_1.__decorate([
        decorators_1.Decorators.it('Test OK'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], tabsTest.prototype, "testOk", null);
    tslib_1.__decorate([
        decorators_1.Decorators.it('affichage d\'un tabs avec tab async non chargé'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], tabsTest.prototype, "displayTabAsyncNotLoaded", null);
    tslib_1.__decorate([
        decorators_1.Decorators.it('affichage d\'un tab async chargé'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], tabsTest.prototype, "displayTabAsync", null);
    tslib_1.__decorate([
        decorators_1.Decorators.it('test des méthodes beforeHideTab/afterShowTab'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], tabsTest.prototype, "hideShowTabs", null);
    tslib_1.__decorate([
        decorators_1.Decorators.after,
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], tabsTest.prototype, "afterShowTabCount", null);
    tabsTest = tslib_1.__decorate([
        decorators_1.Decorators.describe('Test Karma tabs async')
    ], tabsTest);
    return tabsTest;
}(base_test_1.BaseTest));
//lancement des Tests
test_run_1.runTest(new tabsTest());

//# sourceMappingURL=tabs.async.test.karma.js.map
